name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ahjung/de-3-1-airflow:latest


      - name: Set up SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BASTION_HOST }}  # 바스티온 서버의 호스트명 또는 IP 주소
          username: ${{ secrets.BASTION_USERNAME }}  # 바스티온 서버의 사용자 이름
          # key: ${{ steps.decode_bastion_key.outputs.SSH_KEY }}  # SSH 키
          key: ${{ secrets.SSH_BASTION_KEY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Write SSH keys
        run: |
          echo "${{ secrets.SSH_BASTION_KEY }}" > de-3-1-key.pem
          echo "${{ secrets.SSH_PRIVATES_KEY }}" > de-3-1-airflow.pem
          chmod 600 de-3-1-key.pem de-3-1-airflow.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i de-3-1-key.pem ${{ secrets.BASTION_USERNAME }}@${{ secrets.BASTION_HOST }} "ssh -o StrictHostKeyChecking=no -i de-3-1-airflow.pem ${{ secrets.PRIVATE_USERNAME }}@${{ secrets.PRIVATE_HOST }} 'docker pull ahjung/de-3-1-airflow:latest; docker run -d -p 8080:8080 ahjung/de-3-1-airflow:latest'"
